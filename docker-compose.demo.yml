version: '3.8'

services:
  # Demo MySQL database with sample data
  mysql-demo:
    image: mysql:8.0
    container_name: mysql-demo
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-demopass123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-ecommerce_demo}
      MYSQL_USER: ${MYSQL_USER:-demo_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-demopass123}
    volumes:
      - mysql_demo_data:/var/lib/mysql
      - ./demo/mysql-init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./demo/mysql-sample-data.sql:/docker-entrypoint-initdb.d/02-sample-data.sql
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-demopass123}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - demo-network

  # Demo PostgreSQL database with sample data
  postgres-demo:
    image: postgres:15
    container_name: postgres-demo
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-analytics_demo}
      POSTGRES_USER: ${POSTGRES_USER:-demo_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-demopass123}
    volumes:
      - postgres_demo_data:/var/lib/postgresql/data
      - ./demo/postgres-init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./demo/postgres-sample-data.sql:/docker-entrypoint-initdb.d/02-sample-data.sql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-demo_user} -d ${POSTGRES_DB:-analytics_demo}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - demo-network

  # Neo4j graph database
  neo4j-demo:
    image: neo4j:5.0
    container_name: neo4j-demo
    environment:
      NEO4J_AUTH: ${NEO4J_AUTH:-neo4j/demopass123}
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*,gds.*
      NEO4J_dbms_security_procedures_allowlist: apoc.*,gds.*
      NEO4J_dbms_memory_pagecache_size: 1G
      NEO4J_dbms_memory_heap_initial__size: 512M
      NEO4J_dbms_memory_heap_max__size: 1G
      NEO4J_dbms_security_http_access_control_allow_origin: "*"
      NEO4J_dbms_security_http_access_control_allow_methods: "*"
      NEO4J_dbms_security_http_access_control_allow_headers: "*"
    volumes:
      - neo4j_demo_data:/data
      - neo4j_demo_logs:/logs
    ports:
      - "${NEO4J_HTTP_PORT:-7474}:7474"
      - "${NEO4J_BOLT_PORT:-7687}:7687"
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "${NEO4J_PASSWORD:-demopass123}", "RETURN 1;"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 40s
    networks:
      - demo-network

  # Main application
  sql-graph-visualizer:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: ${VERSION:-demo-v1.1.0}
        BUILD_DATE: ${BUILD_DATE}
    container_name: sql-graph-demo
    environment:
      # Application settings
      GO_ENV: ${GO_ENV:-demo}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      CONFIG_PATH: ${CONFIG_PATH:-/app/config/demo-config.yml}
      
      # Server ports
      PORT: ${APP_PORT:-3000}
      API_PORT: ${API_PORT:-8080}
      
      # Database connections (will be overridden by config)
      MYSQL_HOST: mysql-demo
      MYSQL_PORT: 3306
      MYSQL_USER: ${MYSQL_USER:-demo_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-demopass123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-ecommerce_demo}
      
      POSTGRES_HOST: postgres-demo
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER:-demo_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-demopass123}
      POSTGRES_DATABASE: ${POSTGRES_DB:-analytics_demo}
      
      NEO4J_URI: bolt://neo4j-demo:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: ${NEO4J_PASSWORD:-demopass123}
      
      # Demo specific settings
      DEMO_MODE: "true"
      AUTO_TRANSFORM: "true"
      ENABLE_BENCHMARKING: "true"
      
    ports:
      - "${APP_PORT:-3000}:3000"
      - "${API_PORT:-8080}:8080"
    depends_on:
      mysql-demo:
        condition: service_healthy
      postgres-demo:
        condition: service_healthy
      neo4j-demo:
        condition: service_healthy
    volumes:
      - ./config/demo-config.yml:/app/config/demo-config.yml:ro
      - demo_app_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - demo-network

  # Optional: Redis for caching (if needed)
  redis-demo:
    image: redis:7-alpine
    container_name: redis-demo
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-demopass123}
    command: redis-server --requirepass ${REDIS_PASSWORD:-demopass123}
    volumes:
      - redis_demo_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - demo-network

  # Nginx reverse proxy (for production)
  nginx-demo:
    image: nginx:alpine
    container_name: nginx-demo
    volumes:
      - ./demo/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./demo/ssl:/etc/nginx/ssl:ro
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    depends_on:
      - sql-graph-visualizer
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - demo-network

volumes:
  mysql_demo_data:
    driver: local
  postgres_demo_data:
    driver: local
  neo4j_demo_data:
    driver: local
  neo4j_demo_logs:
    driver: local
  redis_demo_data:
    driver: local
  demo_app_logs:
    driver: local

networks:
  demo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
